c
@user.confirmed?
@user
c
User.last
user.confirmed?
user
c
User.last
c
User.last
c
user.confirm
user.confirmed?
c
@user.persisted?
@user
@user.persisted>
@user.pe@user
c
@user.errors
@user.persisted?
@user
c
@user.errors
@user.persisted?
@user.avatar.url
c
user.avatar.url
user.avatar
c
user
c
auth.extra.raw_info.id
auth.extra
auth
auth.info
c
@user.errors
@user.persisted?
@user.avatar.url
@user.avatar
c
@user.errors
@user.persisted?
@user.avatar.url
@user
c
from_omniauth
omniauth
data
user.avatar.url
user.avatar
user.image
c
auth.info.image
user
user.remote_avatar_url
user.remote_Avatar_url
user.remote_avatar.url
user.avatar
user.avatar.url
c
auth.info.image
user.avatar.url = auth.info.image
user.avatar
user.avatar.url
user
@user
c
request.env
request.env.extra
@user.avatar.url
@user.avatar
c
session.fb_data
session.fb_fata
session.user
session[current]
session
current_user
c
@user.errors
@user.persisted?
@user.pesisted?
@user.avatar
@user
c
@user.errors
@user.persisted?
c
user.avatar
c
user.avatar
auth.info.image
c
@user
c
action_name
c
auth.info.name.split
auth.info.name
auth.info
auth.info.email
auth.uid
auth.provider
c
request.env["omniauth.auth"].extra.raw_info
request.env["omniauth.auth"].extra.name
request.env["omniauth.auth"].extra
request.env["omniauth.auth"].extra_info
request.env["omniauth.auth"].credentials.name
request.env["omniauth.auth"].credentials
request.env["omniauth.auth"]
request.env["omniauth.auth"].name
request.env["omniauth.auth"].name.split(" ")
request.env["omniauth.auth"]
request.env
@user.persisted?
User.all
@user
c
ENV["APP_ID"]
c
value
key
c
File.exists?(env_file)
c
env_file
env
c
flash
:new
new
action_name
c
xc
c
action
action_name
c
controller_name
action_name
c
method User
method a
method
method_name
action_name
c
action_name
action
flash.alert
flash
flash[:notice]
c
<<<<<<< HEAD
@project
project_path
projects[value]
project.class
project.class?
project
c
@project.owner_tags_on(@project.poster, :skills)
@project.skill_list
c
@project.owner_tags_on(@project.poster,:skills)
@project.owner_tags_on(current_user,:skills)
@project.owner_tags_on(current_user)
@project.owner_tags_on
@project.owned_tag
@project.skill_list
@project
=======
>>>>>>> 8b1d5c5f688fd7d65b7cebeac8fe52d501b49529
@user.avatar.url
@user.avatar
c
@user.avatar
@user
<<<<<<< HEAD
>>>>>>> 8b1d5c5f688fd7d65b7cebeac8fe52d501b49529
=======
>>>>>>> 8b1d5c5f688fd7d65b7cebeac8fe52d501b49529
c
params[:email]
c
params[:username]
params["password"]
params[:password]
params[:email]
c
:authenticate_user!(current_user)
:authenticate_user!
temp
c
temp
c
current_user
authenticate_user!
current_user
c
current_user
current_path
c
User.first
reload!
User.all
c
User.last.contact_no
User.all.count
User.all
User.last
c
params
c
params
c
User.all
c
user = User.new(params["user"])
params["user"]
params[user]
user = User.new(params[user])
@user
params
